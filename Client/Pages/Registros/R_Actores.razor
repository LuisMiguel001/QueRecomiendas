@page "/crearactor"
@inject HttpClient httpClient
@inject NavigationManager navigationManager

<h3>Crear Actor</h3>

<EditForm Model="actor" OnValidSubmit="GuardarActor">
	<DataAnnotationsValidator />

	<div class="mb-3">
		<div class="mb-3">
			<div class="input-group">
				<InputFile OnChange="OnChange" class="form-control" accept=".png, .jpg, .jpeg" />
			</div>
			<ValidationMessage For="@(() => actor.Foto)" />
		</div>
		@if (actor.Foto != null)
		{
			<img src="@Convert.ToBase64String(actor.Foto)" alt="Imagen seleccionada" />
		}
	</div>

	<div class="form-group">
		<label for="nombre">Nombre:</label>
		<InputText id="nombre" @bind-Value="actor.Nombre" class="form-control" />
		<ValidationMessage For="@(() => actor.Nombre)" />
	</div>

	<div class="form-group">
		<label for="biografia">Biografía:</label>
		<InputText id="biografia" @bind-Value="actor.Biografia" class="form-control" />
		<ValidationMessage For="@(() => actor.Biografia)" />
	</div>

	<div class="form-group">
		<label for="fechaNacimiento">Fecha de Nacimiento:</label>
		<InputDate id="fechaNacimiento" @bind-Value="actor.FechaNacimiento" class="form-control" />
		<ValidationMessage For="@(() => actor.FechaNacimiento)" />
	</div>

	<button type="submit" class="btn btn-primary">Guardar</button>
</EditForm>

@code {
	private Actores actor = new Actores();

	async Task OnChange(InputFileChangeEventArgs e)
	{
		var archivo = e.File;
		var buffer = new byte[archivo.Size];

		await archivo.OpenReadStream().ReadAsync(buffer);
		actor.Foto = buffer;
	}

	private async Task GuardarActor()
	{
		try
		{
			if (ValidarDatosActor())
			{				
				var response = await httpClient.PostAsJsonAsync("api/Actores", actor);

				if (response.IsSuccessStatusCode)
				{
					actor = new Actores();

					navigationManager.NavigateTo("/pelicula");
				}
				else
				{
					var errorMessage = await response.Content.ReadAsStringAsync();
					Console.WriteLine($"Error al guardar el actor: {errorMessage}");
				}
			}
			else
			{
				Console.WriteLine("Los datos del actor no son válidos. Por favor, verifica los campos.");
			}
		}
		catch (Exception ex)
		{
			Console.WriteLine($"Error al intentar guardar el actor: {ex.Message}");
		}
	}

	private bool ValidarDatosActor()
	{
		return !string.IsNullOrEmpty(actor.Nombre);
	}
}
