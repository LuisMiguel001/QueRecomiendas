@page "/detallepelicula"
@page "/detallepelicula/{PeliculaId:int}"
@inject HttpClient httpClient

<style>
	p.clasificacion {
		position: relative;
		overflow: hidden;
		display: inline-block;
	}

		p.clasificacion input {
			position: absolute;
			top: -100px;
		}

		p.clasificacion label {
			float: right;
			color: #333;
			font-size: 1.0em;
		}

			p.clasificacion label:hover,
			p.clasificacion label:hover ~ label,
			p.clasificacion input:checked ~ label {
				color: #dd4;
			}
</style>

@if (Pelicula is null)
{
	<p>Cargando...</p>
}
else
{
	<div>
		<h1>@Pelicula.Titulo</h1>

		<span>
				<strong>Fecha de Estreno:</strong> @Pelicula.FechaEstreno.ToShortDateString()
		</span>

		<br>

		@if (Pelicula.Imagen != null && Pelicula.Imagen.Length > 0)
		{
			var base64Image = Convert.ToBase64String(Pelicula.Imagen);
			<div style="display: flex; align-items: center;">
				<img class="imagen-pelicula" src="data:image/png;base64,@base64Image" alt="Imagen de la película" style="width: 225px; height: 315px; margin-right: 20px;" />
				<iframe width="560" height="315" src="@($"https://www.youtube.com/embed/{Pelicula.Trailer}")" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
			</div>
		}
		<span>
			<p class="clasificacion">
				<strong>Puntuaci&oacute;n:</strong>
				<input id="radio1" type="radio" name="estrellas" value="5">
				<label for="radio1">★</label>
				<input id="radio2" type="radio" name="estrellas" value="4">
				<label for="radio2">★</label>
				<input id="radio3" type="radio" name="estrellas" value="3">
				<label for="radio3">★</label>
				<input id="radio4" type="radio" name="estrellas" value="2">
				<label for="radio4">★</label>
				<input id="radio5" type="radio" name="estrellas" value="1">
				<label for="radio5">★</label>
			</p>
		</span>

		<div class="detalle-item">
			<strong>Resumen</strong><br>@Pelicula.Resena
		</div>
	</div>
}

@code {
	[Parameter]
	public int PeliculaId { get; set; }
	private Peliculas Pelicula { get; set; }
	private PeliculasDetalle PeliculaDetalle { get; set; }

	protected override async Task OnInitializedAsync()
	{
		try
		{
			Pelicula = await httpClient.GetFromJsonAsync<Peliculas>($"api/Peliculas/{PeliculaId}");
			PeliculaDetalle = await httpClient.GetFromJsonAsync<PeliculasDetalle>($"api/Generos/{PeliculaId}");
		}
		catch (HttpRequestException e)
		{
			Console.WriteLine($"Error al obtener detalles de la película: {e.Message}");
		}
	}
}
