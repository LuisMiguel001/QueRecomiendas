// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QueRecomiendas.Server.DAL;

#nullable disable

namespace QueRecomiendas.Server.Migrations
{
    [DbContext(typeof(PeliculasContext))]
    [Migration("20231203005825_QueRecomiendas")]
    partial class QueRecomiendas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("QueRecomiendas.Shared.Login.Usuarios", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("QueRecomiendas.Shared.Models.Actores", b =>
                {
                    b.Property<int>("ActorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Biografia")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Foto")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ActorId");

                    b.ToTable("Actores");
                });

            modelBuilder.Entity("QueRecomiendas.Shared.Models.Generos", b =>
                {
                    b.Property<int>("GeneroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("GeneroId");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("QueRecomiendas.Shared.Models.GenerosPeliculas", b =>
                {
                    b.Property<int>("GeneroPeliculaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GeneroId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PeliculaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("GeneroPeliculaId");

                    b.HasIndex("GeneroId");

                    b.HasIndex("PeliculaId");

                    b.ToTable("GenerosPeliculas");
                });

            modelBuilder.Entity("QueRecomiendas.Shared.Models.Peliculas", b =>
                {
                    b.Property<int>("PeliculaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaEstreno")
                        .HasColumnType("TEXT");

                    b.Property<int>("GeneroId")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Imagen")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("Resena")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Trailer")
                        .HasColumnType("TEXT");

                    b.HasKey("PeliculaId");

                    b.ToTable("Peliculas");
                });

            modelBuilder.Entity("QueRecomiendas.Shared.Models.PeliculasActores", b =>
                {
                    b.Property<int>("ActorPeliId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ActorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PeliculaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ActorPeliId");

                    b.HasIndex("ActorId");

                    b.HasIndex("PeliculaId");

                    b.ToTable("PeliculasActores");
                });

            modelBuilder.Entity("QueRecomiendas.Shared.Models.PeliculasDetalle", b =>
                {
                    b.Property<int>("PeliculasDetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ActorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Actores")
                        .HasColumnType("TEXT");

                    b.Property<string>("Categoria")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("BLOB");

                    b.Property<int>("GeneroId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PeliculaId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PeliculasPeliculaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PeliculasDetalleId");

                    b.HasIndex("PeliculaId");

                    b.HasIndex("PeliculasPeliculaId");

                    b.ToTable("PeliculaDetalle");
                });

            modelBuilder.Entity("QueRecomiendas.Shared.Models.GenerosPeliculas", b =>
                {
                    b.HasOne("QueRecomiendas.Shared.Models.Generos", "Genero")
                        .WithMany("GenerosPeliculas")
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QueRecomiendas.Shared.Models.Peliculas", "Pelicula")
                        .WithMany("generopeli")
                        .HasForeignKey("PeliculaId");

                    b.Navigation("Genero");

                    b.Navigation("Pelicula");
                });

            modelBuilder.Entity("QueRecomiendas.Shared.Models.PeliculasActores", b =>
                {
                    b.HasOne("QueRecomiendas.Shared.Models.Actores", "Actor")
                        .WithMany("peliculasActores")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QueRecomiendas.Shared.Models.Peliculas", "Pelicula")
                        .WithMany("peliActor")
                        .HasForeignKey("PeliculaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Pelicula");
                });

            modelBuilder.Entity("QueRecomiendas.Shared.Models.PeliculasDetalle", b =>
                {
                    b.HasOne("QueRecomiendas.Shared.Models.Peliculas", null)
                        .WithMany("peliculaDetalle")
                        .HasForeignKey("PeliculaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QueRecomiendas.Shared.Models.Peliculas", null)
                        .WithMany("peliDetalle")
                        .HasForeignKey("PeliculasPeliculaId");
                });

            modelBuilder.Entity("QueRecomiendas.Shared.Models.Actores", b =>
                {
                    b.Navigation("peliculasActores");
                });

            modelBuilder.Entity("QueRecomiendas.Shared.Models.Generos", b =>
                {
                    b.Navigation("GenerosPeliculas");
                });

            modelBuilder.Entity("QueRecomiendas.Shared.Models.Peliculas", b =>
                {
                    b.Navigation("generopeli");

                    b.Navigation("peliActor");

                    b.Navigation("peliDetalle");

                    b.Navigation("peliculaDetalle");
                });
#pragma warning restore 612, 618
        }
    }
}
